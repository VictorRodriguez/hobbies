#!/bin/python
import os
import sys
import argparse
import datetime
import socket

if __name__ == "__main__":

    cmd = ""

    parser = argparse.ArgumentParser()

    parser.add_argument("--test", help="Test name ",\
            type=str,dest='test',required=True)
    parser.add_argument("--logpath", help="Path where to save logfiles",\
            type=str,dest='logpath')
    parser.add_argument("--verbose", help="Verbose",\
             dest="verbose", action="store_true")

    args = parser.parse_args()

    """
    Documentation:

    http://www.phoronix-test-suite.com/documentation/phoronix-test-suite.html
    TEST_RESULTS_NAME

    When this variable is set, the value will be used \
            as the name for automatically saving the \
            test results.

    TEST_RESULTS_IDENTIFIER

    When this variable is set, the value will be used \
            as the test identifier when automatically \
            saving the test results.

    TEST_RESULTS_DESCRIPTION

    When this variable is set, the value will be used \
            as the test results description when saving \
            the test results.
    """


    test_name = args.test.split("/")[1]
    ip = socket.gethostbyname(socket.gethostname())
    datetime = str(datetime.datetime.now().strftime("%Y-%m-%d-%H-%M-%S"))

    result_name = "%s-%s-%s" % (test_name,ip,datetime)
    result_identifier = result_name
    result_description = result_name

    cmd = "phoronix-test-suite batch-run %s" % (args.test)

    if args.verbose:

        print("\n Variables \n")
        print(test_name)
        print(ip)
        print(datetime)

        print("\n Command line \n")
        print(cmd_name)
        print(cmd_identifier)
        print(cmd_description)
        print(cmd)

    else:
        os.environ['TEST_RESULTS_NAME'] = result_name
        os.environ['TEST_RESULTS_IDENTIFIER'] = result_identifier
        os.environ['TEST_RESULTS_DESCRIPTION'] = result_description
        os.system(cmd)

        home = os.path.expanduser('~')
        tmp = os.path.join(home,".phoronix-test-suite/test-results/")
        if os.path.isdir(tmp):
            base_path = tmp
            pass
        elif os.path.isdir("/var/lib/phoronix-test-suite/test-results/"):
            base_path = "/var/lib/phoronix-test-suite/test-results/"
            pass
        else:
            print("Error , log files doesn't exist")
            sys.exit(-1)

        plog_path = os.path.join(base_path,result_name.replace(".", ""))

        composite_path = os.path.join(plog_path,"composite.xml")

        with open(composite_path) as f:
            content = f.readlines()

        hib = 1
        result = '0'
        metric = ''
        for value in content:
            if "Value" in value:
                result = value.strip().replace("<Value>","").replace("</Value>","")
            elif "Scale" in value:
                metric = value.strip().replace("<Scale>","").replace("</Scale>","")
            elif "Proportion" in value:
                proportion = value.strip().replace("<Proportion>","").replace("</Proportion>","")
                if proportion == 'LIB':
                    hib = 0

        cmd = "echo '%s,%d,%s' > results.csv" % (metric, hib, result)
        print(cmd)
        os.system(cmd)

        if args.logpath:
            cmd = "mkdir -p %s" % (args.logpath)
            print(cmd)
            os.system(cmd)

            if os.path.isdir(args.logpath):
                cmd = "cp -r %s/ %s" % (plog_path,args.logpath)
                print(cmd)
                os.system(cmd)
            else:
               print("Error log file was not generated by phronix")
               sys.exit(-1)

    sys.exit(0)
