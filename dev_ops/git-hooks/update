#!/bin/sh

refname="$1"
oldrev="$2"
newrev="$3"

ret=0

package_name=$(pwd | cut -d'/' -f5 | cut -d'.' -f1)
echo "Package: $package_name"
git branch test-$newrev $newrev
hook_dir=$(pwd)
echo "creating workspace ..."
    rm -rf /tmp/git-workspace
    mkdir -p /tmp/git-workspace
    cd /tmp/git-workspace
echo "cloning branch ..."
    git clone ~/cgit-repos/$package_name.git &>/dev/null
    cd /tmp/git-workspace/$package_name

# This is necesary to prevent working as remote
unset GIT_DIR

echo "Creating branch to test ..."
    git checkout origin/test-$newrev -b test-$newrev &>/dev/null
    mkdir patches-git-hook
    num_patches=$(git log --oneline test-$newrev ^origin/master | wc -l)
    git format-patch -$num_patches -o patches/ &>/dev/null
    git checkout master &>/dev/null
    for f in patches/*
    do
        echo "Checking patch $f merge in master..."
        git apply --check $f
        retval=$?
        if [ $retval -ne 0 ]; then
            echo "ERROR: patch $f can not be merged in master"
            ret=1
        else
            echo "PASS: patch $f can be merged to master"
        fi
    done
cd $hook_dir
git branch -D test-$newrev

echo "Pushing $oldrev to $newrev from $refname branch"
if [ "$refname" = "refs/heads/master" ];then
    echo "ERROR: push to master is not OK"
    exit 1
fi

exit $ret
